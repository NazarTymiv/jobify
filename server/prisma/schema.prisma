// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String
  password String
  role     Role   @default(EMPLOYEE)

  profile     Profile?
  createdJobs Job[]
  savedJobs   SavedJob[]

  followers Follower[] @relation("follower")
  follows   Follower[] @relation("follows")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follower {
  followerId Int
  follower   User @relation("follower", fields: [followerId], references: [id], onDelete: Cascade)
  followsId  Int
  follows    User @relation("follows", fields: [followsId], references: [id], onDelete: Cascade)

  @@id([followerId, followsId])
}

enum Role {
  EMPLOYEE
  EMPLOYER
}

model Profile {
  id              Int     @id @default(autoincrement())
  firstName       String
  lastName        String
  phone_number    String?
  country         String?
  city            String?
  github_url      String?
  portfolio_url   String?
  profile_picture String?
  cv_url          String?

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int  @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Job {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  background  String?
  skills      String?
  tags        String?
  location    String?

  owner      User       @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId    Int
  savedUsers SavedJob[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SavedJob {
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  job   Job @relation(fields: [jobId], references: [id], onDelete: Cascade)
  jobId Int

  @@id([userId, jobId])
}
